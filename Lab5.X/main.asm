; TODO INSERT CONFIG CODE HERE USING CONFIG BITS GENERATOR
; ANGEL EDGARDO ORELLANA SUTUC
; LABORATORIO NUMERO 5 PROGRAMACION DE MICROCONTROLADORES 
;UNIVERSIDAD DEL VALLE DE GUATEMALA
    ; PIC16F887 Configuration Bit Settings

; Assembly source line config statements

#include "p16f887.inc"

; CONFIG1
; __config 0xE0D4
 __CONFIG _CONFIG1, _FOSC_INTRC_NOCLKOUT & _WDTE_OFF & _PWRTE_OFF & _MCLRE_OFF & _CP_OFF & _CPD_OFF & _BOREN_OFF & _IESO_OFF & _FCMEN_OFF & _LVP_OFF
; CONFIG2
; __config 0xFFFF
 __CONFIG _CONFIG2, _BOR4V_BOR40V & _WRT_OFF
 
 ;VARIABLES
CBLOCK H'20'
 BCD ;USADA PARA CONTAR 1 SEGUNDO CON EL TM1
 BCD_TEMP ;USADA PARA VERIFICAR QUE LA CODIFICACION BCD SIEMPRE SE CUMPLA
 CONTADORTMR1 ;USADA PARA REGISTRAR EL CONTADOR DEL TMR1
 CONTADORTMR2 ;USADA PARA REGISTRAR LAS CUENTAS DEL TMR2
 WRAM ;VARIABLE PARA GUARDAR EL ESTADO DE W
 STATUSRAM
 FLAGS; BANDERAS PARA SELECCIONAR EL DISPLAY Y LA INTERMITENCIA DE LOS LEDS, BITS 0 Y 1 PARA 
 ;SELECTOR DE 7 SEGMENTOS Y BITS 2 Y 3 PARA LEDS INTERMINTENTES 
 FLAGS_TEMP
ENDC

RES_VECT  CODE    0x0000            ; processor reset vector
    GOTO    START                   ; go to beginning of program

; TODO ADD INTERRUPTS HERE IF USED
INTER CODE 0x0004
 
 SAVE:
    MOVWF WRAM
    SWAPF   STATUS,W
    MOVWF   STATUSRAM
 INT_TMR1: ;INTERRUPCION DEL TIMER 1
    BTFSS   PIR1,0 ;SI LA INTERRUPCION ES DEL TIMER 1 ESTE BIT ESTARA EN 1
    GOTO    INT_TMR0
    
    BCF	PIR1,0 ;SE LIMPIA EL FLAG DEL TMR1
    ;MOVLW B'00001011'
    ;MOVWF   TMR1H
    ;MOVLW  B'11011000'; SE COLOCA EN EL TMR1 EL VALOR 3036 PARA QUE ESTE CUENTE 62500 ANTES DE
    ;MOVWF   TMR1L   ;QUE SUCEDA LA INTERRUPCION DEL TMR1
    
 ;  DECF    CONTADORTMR1 ;SE DECREMENTA EL CONTADOR DEL TMR1
  ; BTFSS   STATUS,2  ;SI EL BIT 2 (Z) DEL REGISTRO STATUS ESTA EN 1 (LA OPERACION ANTERIOR DIO 0)
		 ;INCREMENTA EL CONTADOR DE SEGUNDOS		 
   ; GOTO    INT_TMR0 ;VA A LA INTERUPCION DEL TMR2 SI LA OPERACION NO DA 0
    
    
    ;SI SE CONTARON 2 VECES CON EL TMR1 (1S)
    ;MOVLW   .4
    ;MOVWF   CONTADORTMR1
    INCF    BCD,F ;SE SUMA 1
    
  
    
    MOVLW B'00001011'
    MOVWF   TMR1H
    MOVLW  B'11011000'; SE COLOCA EN EL TMR1 EL VALOR 3036 PARA QUE ESTE CUENTE 62500 ANTES DE
    MOVWF   TMR1L   ;QUE SUCEDA LA INTERRUPCION DEL TMR1
    
    
INT_TMR0:
    BTFSS   INTCON,2 ;FLAG DEL TMR0 ACTIVA
    GOTO INT_TMR2
    ;SI EL FLAG DE LA INTERRUPCION ESTA ACTIVA
   
    BCF	INTCON,2
   
    MOVLW   B'11111100'
    ANDWF   FLAGS,W ;SE CONSERVAN TODOS LOS BITS MENOS LOS PRIMEROS 2
    MOVWF   FLAGS_TEMP
    
    COMF    FLAGS,F
    MOVLW   B'00000011'
    ANDWF   FLAGS,W
    ADDWF   FLAGS_TEMP,W ;SE SUMAN LAS VARIABLES PARA UNIR LOS VALORES DE AMBOS BITS
    MOVWF  FLAGS
     BSF	FLAGS,4 ;INDICA QUE HAY QUE ACTUALIZAR EL PUERTO D
    MOVLW   .193
    MOVWF   TMR0
    

INT_TMR2: ;INTERRUPCION DEL TIMER 2
    BTFSS   PIR1,1 ;ESTE BIT ESTARA EN 1 SI LA INTERRUPCION DEL TIMER 2 ESTA ACTIVA
    GOTO    LOAD
    
    BCF	PIR1,1 ;SE COLOCA EN 0 EL FLAG DEL TMR2
    DECF    CONTADORTMR2,F
    BTFSS   STATUS,2 ;SI DA 0 SALTA LA INSTRUCCION
    GOTO    LOAD
    
    MOVLW   .13
    MOVWF   CONTADORTMR2
    MOVFW   FLAGS
    ANDLW   B'11110011' ;SE CONSERVAN TODOS MENOS LOS BITS 2 Y 3
    MOVWF   FLAGS_TEMP ;SE GUARDA EL ESTADO DE FLAGS
    COMF    FLAGS,W ;SE HACE COMPLEMENTO A FLAGS
    ANDLW   B'00001100' ;SE CONSERVAN LOS BITS 2 Y 3 DEL COMPLEMENTO
    ADDWF   FLAGS_TEMP,W ;SE UNEN AMBOS REGISTROS
    MOVWF   FLAGS
    BSF	FLAGS,4 ;SE DEBE ACTUALIZAR EL PUERO D
    
LOAD:
    SWAPF STATUSRAM,W
    MOVWF   STATUS
    SWAPF   WRAM,F
    SWAPF   WRAM,W
    RETFIE

    
MAIN_PROG CODE                      ; let linker place main program
START	;CONFIGURACION DEL PIC
    BSF	STATUS,5
    BSF	STATUS,6
    CLRF    ANSEL
    CLRF    ANSELH
    
    BSF	STATUS,5
    BCF	STATUS,6;BANCO 1
    
    CLRF    TRISA;SALIDA DE PRUEBAS
    CLRF    TRISC ; SALIDA PARA EL DISPLAY
    CLRF    TRISD   ;SALIDA PARA SWITCHEO DE DISPLAY Y LEDS PARPADEANTES
    
    BSF	OSCCON,6
    BCF	OSCCON,5
    BSF	OSCCON,4
    
    MOVLW B'11010011' ;SE ASIGNA AL TMR0 EL PRESCALER, SE CONFIGURA QUE FUNCIONE CON EL 
    MOVWF   OPTION_REG; OSCILADOR INTERNO, EL PRESCALER SE COLOCA EN 1:16
    
    MOVLW   .125 ;CUANDO EL TMR2 CUENTE 125*16 CICLOS EL COMPARADOR ENTRE TMR2 Y PR2 MARCARA  
    MOVWF   PR2;UN 1 INCREMENTANDO EL POST SCALER
    
    MOVLW B'11100000' ;SE HABILITAN LAS INTERRUPCIONES PERIFERICAS Y GLOBALES, SE ACTIVA LA
    MOVWF   INTCON ;INTERRUPCION DEL TMR0 QUE SUCEDERA CADA 2 MS
    
    MOVLW   B'00000011' ;SE ACTIVAN LAS INTERRUPCIONES DEL TMR1 Y TMR2
    MOVWF   PIE1 
    
    BCF	STATUS,5 ;SELECCIONAR BANCO 0
    
    MOVLW   B'00110001';SE DESACTIVA EL MODO GATE TIMER, LP SE APAGA, SE SELECCIONA UNA FUENTE 
    MOVWF   T1CON;DE RELOJ INTERNA, CON UN PRESCALER DE 1:8 Y SE ENCIENDE EL TMR1
    
    MOVLW   B'0100111' ;EL TMR 2 CONTARA CADA 2 MS CON UN POSTCALER DE 1:5 CON LO QUE LA INTERRUPCION
    MOVWF   T2CON ; SE ACTIVARA CADA 10MS
    
    MOVLW   .193
    MOVWF   TMR0 ;CONFIGURADO PARA QUE CUENTE 125 VECES ANTES DE EJECUTAR LA INTERRUPCION
    
    MOVLW B'00001011'
    MOVWF   TMR1H
    MOVLW   B'11011100'; SE COLOCA EN EL TMR1 EL VALOR 3036 PARA QUE ESTE CUENTE 62500 ANTES DE
    MOVWF   TMR1L   ;QUE SUCEDA LA INTERRUPCION DEL TMR1
    
    ;MOVLW   .4
    ;MOVWF   CONTADORTMR1
    
    MOVLW   .13
    MOVWF   CONTADORTMR2
    
    
    CLRF    BCD
    MOVLW B'1101'
    MOVWF    FLAGS
    MOVLW B'1101'
    MOVWF    FLAGS_TEMP
LOOP:
    CALL    CORREGIR_BCD
   
    
    BTFSS   FLAGS,4 
    GOTO    LOOP
    
    BCF	FLAGS,4
    CLRF    PORTD
    CALL    TABLA
    MOVWF  PORTC
    MOVF   FLAGS,W
    MOVWF PORTD
    
    GOTO LOOP
    
TABLA:
    MOVFW   BCD
    BTFSS FLAGS,0 ; SI ESTA EN CERO SE USAN LOS BITS MENOS SIGNIFICATIVOS SI ESTA EN 1 LO CONTRARIO
    SWAPF BCD,W
    ANDLW B'00001111' ;CONSERVAMOS SOLO EL NIBBLE INFERIOR DEL DATO GUARDADO EN W
    ADDWF   PCL,F
    RETLW B'01110111'  ; 0  EN EL DISPLAY
    RETLW B'01000001' ;1
    RETLW B'00111011' ;2
    RETLW B'01101011';3
    RETLW B'01001101';4
    RETLW   B'01101110' ;5
    RETLW B'01111110' ;6
    RETLW   B'01000011' ;7
    RETLW   B'01111111';8
    RETLW   B'01101111';9
    

CORREGIR_BCD:
     MOVFW   BCD
    ANDLW   B'00001111' ; SE CONSERVAN LOS 4 BITS MENOS SIGNIFICATIVOS
    MOVWF   BCD_TEMP
    
    MOVLW   .10
    SUBWF   BCD_TEMP,W
    BTFSS	 STATUS,2 ;SI EL BIT Z ES 1 SE SALTA LA INSTRUCCION
    RETURN ;SE VA A LA INTERRUPCION DEL TIMER 2 SI LA OPERACION NO DA 0

SUMA_10:
    ;SI BCDL ES IGUAL A 10
     MOVLW .6 ;SE LE SUMA 6 AL CONTADOR
     ADDWF  BCD,F
     
    ;QUE NO SE PASE DE 59 EN BCD
    MOVLW   B'10100000' ;VALOR NO VALIDO EN BCD
    SUBWF   BCD,W
    BTFSC	 STATUS,Z ; SI LA OPERACION ANTERIOR DA 0 SE ACTIVA EL BIT Z
    CLRF    BCD ; SE REINICIA EL BCD
    RETURN
    END
    
    
    